{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["DatePicker","noMonth","sticky","infinite","className","style","useState","m","dates","Date","y","getFullYear","useEffect","arr","setNShow","window","setMob","setNoOfMonth","LeftButton","styled","RightButton","useMemo","document","evt","flyoutElement","targetElement","setOpen","id","open","onScroll","e","nShow","display","gap","width","mob","position","flexDirection","background","border","boxSizing","boxShadow","borderRadius","padding","alignItems","overflowY","maxHeight","React","onClick","newArr","ele","setDates","month","year","key","Months","setData","date","days","active","day","time","fillArr","fillerArr","monthNames","data","getDaysInMonth","changeMonth","i","color","MonthWrapper","MonthTitle","MonthContainer","DayContainer","WeekDaysWrapper","checkin","checkout","indx","App","toDateString","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f6294cc0.chunk.js","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport './styles.module.css'\nimport { ReactComponent as LeftArrow } from './assets/left.svg'\nimport { ReactComponent as RightArrow } from './assets/right.svg'\n\nexport const DatePicker = ({\n  children,\n  dates,\n  setDates,\n  noMonth = 2,\n  open,\n  setOpen,\n  sticky = true,\n  infinite = true,\n  className = '',\n  style\n}) => {\n  const [noOfMonth, setNoOfMonth] = useState(noMonth)\n  const [nShow, setNShow] = useState([\n    {\n      m: dates.checkin ? dates.checkin.getMonth() : new Date().getMonth(),\n      y: dates.checkin ? dates.checkin.getFullYear() : new Date().getFullYear()\n    }\n  ])\n  useEffect(() => {\n    const arr = [...nShow]\n    while (true) {\n      if (arr.length === noOfMonth) {\n        break\n      }\n      if (arr[arr.length - 1].m === 11) {\n        arr.push({\n          m: 0,\n          y: arr[arr.length - 1].y + 1\n        })\n      } else {\n        arr.push({\n          m: arr[arr.length - 1].m + 1,\n          y: arr[arr.length - 1].y\n        })\n      }\n    }\n    setNShow(arr)\n  }, [noOfMonth])\n  const [mob, setMob] = useState(false)\n\n  useEffect(() => {\n    window.addEventListener('resize', () => {\n      if (window.innerWidth < 800) {\n        setMob(true)\n      } else {\n        setMob(false)\n        setNoOfMonth(2)\n      }\n    })\n    window.addEventListener('load', () => {\n      if (window.innerWidth < 800) {\n        setMob(true)\n      } else {\n        setMob(false)\n        setNoOfMonth(2)\n      }\n    })\n  }, [])\n  const nextMonths = () => {\n    const newArr = nShow.map((ele) => {\n      if (ele.m === 11) {\n        return {\n          m: 0,\n          y: ele.y + 1\n        }\n      }\n      return {\n        m: ele.m + 1,\n        y: ele.y\n      }\n    })\n    setNShow(newArr)\n  }\n  const prevMonths = () => {\n    const newArr = nShow.map((ele) => {\n      if (ele.m === 0) {\n        return {\n          m: 11,\n          y: ele.y - 1\n        }\n      }\n      return {\n        m: ele.m - 1,\n        y: ele.y\n      }\n    })\n    setNShow(newArr)\n  }\n  const LeftButton = styled.button`\n    position: absolute;\n    background: none;\n    border: 0;\n    left: 40px;\n    top: calc(1.5em + 20px);\n    cursor: pointer;\n  `\n  const RightButton = styled.button`\n    position: absolute;\n    background: none;\n    border: 0;\n    right: 40px;\n    top: calc(1.5em + 20px);\n    cursor: pointer;\n  `\n  useMemo(() => {\n    if (sticky) {\n      document.addEventListener('click', (evt) => {\n        const flyoutElement = document.getElementById('date-picker')\n        let targetElement = evt.target\n        do {\n          if (targetElement === flyoutElement) {\n            return\n          }\n          targetElement = targetElement.parentNode\n        } while (targetElement)\n        setOpen(false)\n      })\n    }\n  }, [])\n\n  const handleScroll = (e) => {\n    const bottom =\n      e.target.scrollHeight - e.target.scrollTop <= e.target.clientHeight + 100\n    if (bottom && mob) {\n      const arr = []\n      if (nShow[nShow.length - 1].m === 11) {\n        arr.push({\n          m: 0,\n          y: nShow[nShow.length - 1].y + 1\n        })\n      } else {\n        arr.push({\n          m: nShow[nShow.length - 1].m + 1,\n          y: nShow[nShow.length - 1].y\n        })\n      }\n\n      setNShow([...nShow, ...arr])\n    }\n  }\n  return (\n    <div className={'date-picker ' + className} id='date-picker'>\n      {children}\n      {open && (\n        <div\n          className='date-picker-wrapper'\n          onScroll={handleScroll}\n          style={{\n            display: 'flex',\n            gap: '20px',\n            width: mob ? '100%' : 'fit-content',\n            position: 'absolute',\n            flexDirection: mob ? 'column' : 'row',\n            background: '#FFFFFF',\n            border: !mob && '1px solid #F2F2F2',\n            boxSizing: 'border-box',\n            boxShadow: !mob && '0px 0px 50px 4px rgba(221, 221, 221, 0.35)',\n            borderRadius: '10px',\n            padding: mob ? '20px 0' : '20px 40px',\n            alignItems: mob && 'center',\n            overflowY: mob && 'auto',\n            maxHeight: mob && '400px',\n            ...style\n          }}\n        >\n          {!mob && (\n            <React.Fragment>\n              <LeftButton onClick={prevMonths}>\n                <LeftArrow />\n              </LeftButton>\n\n              <RightButton onClick={nextMonths}>\n                <RightArrow />\n              </RightButton>\n            </React.Fragment>\n          )}\n          {nShow\n            .slice(!mob ? nShow.length - 2 : 0, nShow.length)\n            .map((ele, indx) => {\n              return (\n                <Months\n                  setDates={setDates}\n                  month={ele.m}\n                  year={ele.y}\n                  dates={dates}\n                  key={`${ele.m}+${ele.y}`}\n                  mob={mob}\n                />\n              )\n            })}\n        </div>\n      )}\n    </div>\n  )\n}\n\nconst Months = ({\n  dates,\n  setDates,\n  month = new Date().getMonth(),\n  year = new Date().getFullYear(),\n  mob\n}) => {\n  const [changeMonth, setChangeMonth] = useState({\n    month: month,\n    year: year\n  })\n  const [data, setData] = useState({})\n  useMemo(() => {\n    setData(getDaysInMonth(changeMonth.month, changeMonth.year))\n  }, [changeMonth])\n  useMemo(() => {\n    if (data.data) {\n      const arr = data.data.map((i) => {\n        if (i.time === dates.checkin || i.time === dates.checkout) {\n          return { ...i, color: '#3564E2' }\n        }\n        if (dates.checkin < i.time && dates.checkout > i.time) {\n          return { ...i, color: '#EDF2FF' }\n        }\n        return { ...i, color: '' }\n      })\n      setData({ month: data.month, data: arr })\n    }\n  }, [dates])\n  const MonthWrapper = styled.div`\n    width: fit-content;\n    h3 {\n      text-align: center;\n    }\n  `\n  const MonthTitle = styled.div`\n    display: flex;\n    width: 100%;\n    align-items: center;\n    font-family: Inter;\n    justify-content: center;\n  `\n  const MonthContainer = styled.div`\n    grid-template-columns: repeat(7, ${mob ? '40px' : '48px'});\n    display: grid;\n  `\n  const DayContainer = styled.div`\n    display: flex;\n    align-items: center;\n    font-family: Inter;\n    justify-content: center;\n    border-radius: 4px;\n    font-family: Inter;\n    font-style: normal;\n    font-weight: 600;\n    font-size: 12px;\n    line-height: 15px;\n    display: flex;\n    align-items: center;\n    text-align: center;\n    font-feature-settings: 'tnum' on, 'lnum' on;\n    color: #333333;\n    height: ${mob ? '40px' : '48px'};\n    cursor: pointer;\n    border: 1px solid white;\n    transition: 0.3s ease-in-out;\n    &:hover {\n      background: #f2f2f2;\n      border: 1px solid #f2f2f2;\n    }\n  `\n  const WeekDaysWrapper = styled.div`\n    grid-template-columns: repeat(7, ${mob ? '40px' : '48px'});\n    display: grid;\n    div {\n      text-align: center;\n      font-family: Inter;\n      font-style: normal;\n      font-weight: 600;\n      font-size: 12px;\n      line-height: 150%;\n      color: #666666;\n    }\n  `\n  useEffect(() => {\n    if (data.data) {\n      const arr = data.data.map((i) => {\n        if (\n          i.time &&\n          (i.time.toDateString() === dates.checkin.toDateString() ||\n            i.time.toDateString() === dates.checkout.toDateString())\n        ) {\n          return { ...i, color: '#3564E2' }\n        }\n        if (i.time && (i.time === dates.checkin || i.time === dates.checkout)) {\n          return { ...i, color: '#3564E2' }\n        }\n        if (dates.checkin < i.time && dates.checkout > i.time) {\n          return { ...i, color: '#EDF2FF' }\n        }\n        return { ...i, color: '' }\n      })\n      setData({ month: data.month, data: arr })\n    }\n  }, [])\n  return (\n    <MonthWrapper>\n      <MonthTitle>\n        {data.data && (\n          <h3>\n            {data.month}\n            &nbsp;{year}\n            {/* {data.data[data.length - 1].time.getFullYear()} */}\n          </h3>\n        )}\n      </MonthTitle>\n      <WeekDaysWrapper>\n        <div>Sun</div>\n        <div>Mon</div>\n        <div>Tue</div>\n        <div>Wed</div>\n        <div>Thu</div>\n        <div>Fri</div>\n        <div>Sat</div>\n      </WeekDaysWrapper>\n      <MonthContainer>\n        {data.data &&\n          data.data.map((ele, indx) => {\n            return (\n              <DayContainer\n                style={{\n                  background: ele.color,\n                  color: ele.color\n                    ? ele.color === '#EDF2FF'\n                      ? 'black'\n                      : 'white'\n                    : !ele.active\n                    ? 'lightgray'\n                    : 'black'\n                }}\n                onClick={() => {\n                  if (ele.active) {\n                    if (dates.checkin < dates.checkout) {\n                      return setDates({\n                        checkin: '',\n                        checkout: ''\n                      })\n                    }\n                    if (\n                      dates.checkout === ele.time ||\n                      dates.checkin === ele.time\n                    ) {\n                      return setDates({\n                        checkin: '',\n                        checkout: ''\n                      })\n                    }\n                    if (dates.checkin === '') {\n                      setDates({\n                        ...dates,\n                        checkin: ele.time\n                      })\n                    } else if (dates.checkin !== '') {\n                      setDates({\n                        ...dates,\n                        checkout: ele.time\n                      })\n                    }\n                  }\n                }}\n                key={`${ele.date}-${ele.day}-${indx}`}\n              >\n                {ele.date}\n              </DayContainer>\n            )\n          })}\n      </MonthContainer>\n    </MonthWrapper>\n  )\n}\n\nconst monthNames = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n]\n\nfunction getDaysInMonth(month, year) {\n  var date = new Date(year, month, 1)\n  var days = []\n  while (date.getMonth() === month) {\n    days.push(new Date(date))\n    date.setDate(date.getDate() + 1)\n  }\n  const arr = days.map((ele) => {\n    if (new Date() > ele) {\n      return {\n        active: false,\n        day: new Date(ele).getDay(),\n        date: new Date(ele).getDate(),\n        time: new Date(ele)\n      }\n    }\n    return {\n      active: true,\n      day: new Date(ele).getDay(),\n      date: new Date(ele).getDate(),\n      time: new Date(ele)\n    }\n  })\n  const fillerArr = [0, 1, 2, 3, 4, 5, 6]\n  const fillArr = [...fillerArr.slice(0, arr[0].time.getDay()), ...arr]\n\n  return { month: monthNames[month], data: fillArr }\n}\n","import React, { useState } from 'react'\n\nimport { DatePicker } from 'react-dater'\nimport 'react-dater/dist/index.css'\n\nconst App = () => {\n  const [dates, setDates] = useState({\n    checkin: new Date('2022-03-28'),\n    checkout: new Date('2022-04-28')\n  })\n  const [open, setOpen] = useState(false)\n  return (\n    <>\n      <DatePicker\n        dates={dates}\n        setDates={setDates}\n        open={open}\n        setOpen={setOpen}\n      >\n        <button onClick={() => setOpen(!open)}>\n          {dates.checkin && dates.checkin.toDateString()} |{' '}\n          {dates.checkout && dates.checkout.toDateString()}\n        </button>\n      </DatePicker>\n    </>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}