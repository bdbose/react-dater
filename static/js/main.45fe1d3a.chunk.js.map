{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["DatePicker","noMonth","sticky","infinite","className","mobile","useState","m","dates","Date","y","getFullYear","dateRef","useRef","useEffect","event","setOpen","document","arr","setNShow","LeftButton","styled","RightButton","ref","tabIndex","id","open","onScroll","e","nShow","style","display","gap","width","mob","position","flexDirection","background","border","boxSizing","boxShadow","borderRadius","padding","alignItems","overflowY","maxHeight","React","onClick","newArr","ele","setDates","month","year","key","Months","useMemo","setData","date","days","active","day","time","fillArr","fillerArr","monthNames","data","getDaysInMonth","changeMonth","checkin","checkout","i","color","MonthWrapper","MonthTitle","MonthContainer","DayContainer","WeekDaysWrapper","H3","indx","App","window","innerWidth","toDateString","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.45fe1d3a.chunk.js","sourcesContent":["import React, { useEffect, useMemo, useState, useRef } from 'react'\nimport styled from 'styled-components'\nimport './styles.module.css'\nimport { ReactComponent as LeftArrow } from './assets/left.svg'\nimport { ReactComponent as RightArrow } from './assets/right.svg'\n\nexport const DatePicker = ({\n  children,\n  dates,\n  setDates,\n  noMonth = 2,\n  open,\n  setOpen,\n  sticky = true,\n  infinite = true,\n  className = '',\n  style,\n  mobile = false\n}) => {\n  const [noOfMonth, setNoOfMonth] = useState(noMonth)\n  const [nShow, setNShow] = useState([\n    {\n      m: dates.checkin ? dates.checkin.getMonth() : new Date().getMonth(),\n      y: dates.checkin ? dates.checkin.getFullYear() : new Date().getFullYear()\n    }\n  ])\n  const dateRef = useRef()\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (dateRef.current && !dateRef.current.contains(event.target)) {\n        if (sticky) setOpen(false)\n      }\n    }\n\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside)\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }, [dateRef])\n  useEffect(() => {\n    const arr = [...nShow]\n    while (true) {\n      if (arr.length === noOfMonth) {\n        break\n      }\n      if (arr[arr.length - 1].m === 11) {\n        arr.push({\n          m: 0,\n          y: arr[arr.length - 1].y + 1\n        })\n      } else {\n        arr.push({\n          m: arr[arr.length - 1].m + 1,\n          y: arr[arr.length - 1].y\n        })\n      }\n    }\n    setNShow(arr)\n  }, [noOfMonth])\n  const [mob, setMob] = useState(mobile)\n\n  // useEffect(() => {\n  //   window.addEventListener('resize', () => {\n  //     if (window.innerWidth < breakpoint) {\n  //       setMob(true)\n  //     } else {\n  //       setMob(false)\n  //       setNoOfMonth(noMonth)\n  //     }\n  //   })\n  //   window.addEventListener('load', () => {\n  //     if (window.innerWidth < breakpoint) {\n  //       setMob(true)\n  //     } else {\n  //       setMob(false)\n  //       setNoOfMonth(noMonth)\n  //     }\n  //   })\n  // }, [])\n  const nextMonths = () => {\n    const newArr = nShow.map((ele) => {\n      if (ele.m === 11) {\n        return {\n          m: 0,\n          y: ele.y + 1\n        }\n      }\n      return {\n        m: ele.m + 1,\n        y: ele.y\n      }\n    })\n    setNShow(newArr)\n  }\n  const prevMonths = () => {\n    const newArr = nShow.map((ele) => {\n      if (ele.m === 0) {\n        return {\n          m: 11,\n          y: ele.y - 1\n        }\n      }\n      return {\n        m: ele.m - 1,\n        y: ele.y\n      }\n    })\n    setNShow(newArr)\n  }\n  const LeftButton = styled.button`\n    position: absolute;\n    background: none;\n    border: 0;\n    left: 40px;\n    top: calc(1.5em + 20px);\n    cursor: pointer;\n  `\n  const RightButton = styled.button`\n    position: absolute;\n    background: none;\n    border: 0;\n    right: 40px;\n    top: calc(1.5em + 20px);\n    cursor: pointer;\n  `\n\n  const handleScroll = (e) => {\n    const bottom =\n      e.target.scrollHeight - e.target.scrollTop <= e.target.clientHeight + 10\n    if (bottom && mob) {\n      const arr = []\n      if (nShow[nShow.length - 1].m === 11) {\n        arr.push({\n          m: 0,\n          y: nShow[nShow.length - 1].y + 1\n        })\n      } else {\n        arr.push({\n          m: nShow[nShow.length - 1].m + 1,\n          y: nShow[nShow.length - 1].y\n        })\n      }\n      e.target.scrollTop = 10\n      setNShow([nShow[nShow.length - 1], ...arr])\n    }\n    const top = e.target.scrollTop\n    if (top === 0) {\n      const arr = []\n      if (nShow[0].m === 0) {\n        arr.push({\n          m: 11,\n          y: nShow[0].y - 1\n        })\n      } else {\n        arr.push({\n          m: nShow[0].m - 1,\n          y: nShow[0].y\n        })\n      }\n      // console.log([...arr, nShow[0]])\n      setNShow([...arr, nShow[0]])\n    }\n  }\n\n  return (\n    <div\n      className={'date-picker ' + className}\n      ref={dateRef}\n      tabIndex={0}\n      id='date-picker'\n    >\n      {children}\n      {open && (\n        <div\n          className='date-picker-wrapper'\n          onScroll={handleScroll}\n          style={{\n            display: 'flex',\n            gap: '20px',\n            width: mob ? '100%' : 'fit-content',\n            position: 'absolute',\n            flexDirection: mob ? 'column' : 'row',\n            background: '#FFFFFF',\n            border: !mob && '1px solid #F2F2F2',\n            boxSizing: 'border-box',\n            boxShadow: !mob && '0px 0px 50px 4px rgba(221, 221, 221, 0.35)',\n            borderRadius: '10px',\n            padding: mob ? '20px 0' : '20px 40px',\n            alignItems: mob && 'center',\n            overflowY: mob && 'auto',\n            maxHeight: mob && '400px',\n            ...style\n          }}\n        >\n          {!mob && (\n            <React.Fragment>\n              <LeftButton onClick={prevMonths}>\n                <LeftArrow />\n              </LeftButton>\n\n              <RightButton onClick={nextMonths}>\n                <RightArrow />\n              </RightButton>\n            </React.Fragment>\n          )}\n          {nShow\n            .slice(!mob ? nShow.length - 2 : 0, nShow.length)\n            .map((ele, indx) => {\n              return (\n                <Months\n                  setDates={setDates}\n                  month={ele.m}\n                  year={ele.y}\n                  dates={dates}\n                  key={`${ele.m}+${ele.y}`}\n                  mob={mob}\n                />\n              )\n            })}\n        </div>\n      )}\n    </div>\n  )\n}\n\nconst Months = ({\n  dates,\n  setDates,\n  month = new Date().getMonth(),\n  year = new Date().getFullYear(),\n  mob\n}) => {\n  const [changeMonth, setChangeMonth] = useState({\n    month: month,\n    year: year\n  })\n  const [data, setData] = useState({})\n  useMemo(() => {\n    setData(getDaysInMonth(changeMonth.month, changeMonth.year))\n  }, [changeMonth])\n  useMemo(() => {\n    if (new Date(dates.checkin) > new Date(dates.checkout)) {\n      return setDates({\n        checkin: dates.checkout,\n        checkout: dates.checkin\n      })\n    }\n    if (data.data) {\n      const arr = data.data.map((i) => {\n        if (i.time === dates.checkin || i.time === dates.checkout) {\n          return { ...i, color: '#3564E2' }\n        }\n        if (dates.checkin < i.time && dates.checkout > i.time) {\n          return { ...i, color: '#EDF2FF' }\n        }\n        return { ...i, color: '' }\n      })\n      setData({ month: data.month, data: arr })\n    }\n  }, [dates])\n  const MonthWrapper = styled.div`\n    width: fit-content;\n    h3 {\n      text-align: center;\n    }\n  `\n  const MonthTitle = styled.div`\n    display: flex;\n    width: 100%;\n    align-items: center;\n    font-family: Inter;\n    justify-content: center;\n  `\n  const MonthContainer = styled.div`\n    grid-template-columns: repeat(7, ${mob ? '40px' : '48px'});\n    display: grid;\n  `\n  const DayContainer = styled.div`\n    display: flex;\n    align-items: center;\n    font-family: Inter;\n    justify-content: center;\n    border-radius: 4px;\n    font-family: Inter;\n    font-style: normal;\n    font-weight: 600;\n    font-size: 12px;\n    line-height: 15px;\n    display: flex;\n    align-items: center;\n    text-align: center;\n    font-feature-settings: 'tnum' on, 'lnum' on;\n    color: #333333;\n    height: ${mob ? '40px' : '48px'};\n    cursor: pointer;\n    border: 1px solid white;\n    transition: 0.3s ease-in-out;\n    &:hover {\n      background: #f2f2f2;\n      border: 1px solid #f2f2f2;\n    }\n  `\n  const WeekDaysWrapper = styled.div`\n    grid-template-columns: repeat(7, ${mob ? '40px' : '48px'});\n    display: grid;\n    div {\n      text-align: center;\n      font-family: Inter;\n      font-style: normal;\n      font-weight: 600;\n      font-size: 12px;\n      line-height: 150%;\n      color: #666666;\n    }\n  `\n  const H3 = styled.div`\n    display: block;\n    text-align: center;\n    font-size: 1.17em;\n    margin-block-start: 1em;\n    margin-block-end: 1em;\n    margin-inline-start: 0px;\n    margin-inline-end: 0px;\n    font-weight: bold;\n  `\n  useEffect(() => {\n    if (data.data) {\n      const arr = data.data.map((i) => {\n        if (\n          i.time &&\n          (i.time.toDateString() ===\n            (dates.checkin && dates.checkin.toDateString()) ||\n            i.time.toDateString() ===\n              (dates.checkout && dates.checkout.toDateString()))\n        ) {\n          return { ...i, color: '#3564E2' }\n        }\n        if (i.time && (i.time === dates.checkin || i.time === dates.checkout)) {\n          return { ...i, color: '#3564E2' }\n        }\n        if (dates.checkin < i.time && dates.checkout > i.time) {\n          return { ...i, color: '#EDF2FF' }\n        }\n        return { ...i, color: '' }\n      })\n      setData({ month: data.month, data: arr })\n    }\n  }, [])\n  return (\n    <MonthWrapper>\n      <MonthTitle>\n        {data.data && (\n          <H3>\n            {data.month}\n            &nbsp;{year}\n            {/* {data.data[data.length - 1].time.getFullYear()} */}\n          </H3>\n        )}\n      </MonthTitle>\n      <WeekDaysWrapper>\n        <div>Sun</div>\n        <div>Mon</div>\n        <div>Tue</div>\n        <div>Wed</div>\n        <div>Thu</div>\n        <div>Fri</div>\n        <div>Sat</div>\n      </WeekDaysWrapper>\n      <MonthContainer>\n        {data.data &&\n          data.data.map((ele, indx) => {\n            return (\n              <DayContainer\n                style={{\n                  background: ele.color,\n                  color: ele.color\n                    ? ele.color === '#EDF2FF'\n                      ? 'black'\n                      : 'white'\n                    : !ele.active\n                    ? 'lightgray'\n                    : 'black'\n                }}\n                onClick={() => {\n                  if (ele.active) {\n                    if (dates.checkin < dates.checkout) {\n                      return setDates({\n                        checkin: '',\n                        checkout: ''\n                      })\n                    }\n                    if (\n                      dates.checkout === ele.time ||\n                      dates.checkin === ele.time\n                    ) {\n                      return setDates({\n                        checkin: '',\n                        checkout: ''\n                      })\n                    }\n                    if (dates.checkin === '') {\n                      setDates({\n                        ...dates,\n                        checkin: ele.time\n                      })\n                    } else if (dates.checkin !== '') {\n                      setDates({\n                        ...dates,\n                        checkout: ele.time\n                      })\n                    }\n                  }\n                }}\n                key={`${ele.date}-${ele.day}-${indx}`}\n              >\n                {ele.date}\n              </DayContainer>\n            )\n          })}\n      </MonthContainer>\n    </MonthWrapper>\n  )\n}\n\nconst monthNames = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n]\n\nfunction getDaysInMonth(month, year) {\n  var date = new Date(year, month, 1)\n  var days = []\n  while (date.getMonth() === month) {\n    days.push(new Date(date))\n    date.setDate(date.getDate() + 1)\n  }\n  const arr = days.map((ele) => {\n    if (new Date() > ele) {\n      return {\n        active: false,\n        day: new Date(ele).getDay(),\n        date: new Date(ele).getDate(),\n        time: new Date(ele)\n      }\n    }\n    return {\n      active: true,\n      day: new Date(ele).getDay(),\n      date: new Date(ele).getDate(),\n      time: new Date(ele)\n    }\n  })\n  const fillerArr = [0, 1, 2, 3, 4, 5, 6]\n  const fillArr = [...fillerArr.slice(0, arr[0].time.getDay()), ...arr]\n\n  return { month: monthNames[month], data: fillArr }\n}\n","import React, { useState } from 'react'\n\nimport { DatePicker } from 'react-dater'\nimport 'react-dater/dist/index.css'\n\nconst App = () => {\n  const [dates, setDates] = useState({\n    checkin: new Date('2022-03-28'),\n    checkout: new Date('2022-04-28')\n  })\n  const [open, setOpen] = useState(true)\n  return (\n    <>\n      <div className='ieo'>\n        <DatePicker\n          dates={dates}\n          setDates={setDates}\n          open={open}\n          setOpen={setOpen}\n          mobile={window.innerWidth < 800 ? true : false}\n          sticky={false}\n        >\n          <div className='sda'>\n            <button onClick={() => setOpen(!open)}>\n              {dates.checkin && dates.checkin.toDateString()} |{' '}\n              {dates.checkout && dates.checkout.toDateString()}\n            </button>\n          </div>\n        </DatePicker>\n      </div>\n    </>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}